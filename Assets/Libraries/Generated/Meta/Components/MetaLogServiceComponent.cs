//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity logServiceEntity { get { return GetGroup(MetaMatcher.LogService).GetSingleEntity(); } }
    public LogServiceComponent logService { get { return logServiceEntity.logService; } }
    public bool hasLogService { get { return logServiceEntity != null; } }

    public MetaEntity SetLogService(Sources.Systems.Logging.ILogService newInstance) {
        if (hasLogService) {
            throw new Entitas.EntitasException("Could not set LogService!\n" + this + " already has an entity with LogServiceComponent!",
                "You should check if the context already has a logServiceEntity before setting it or use context.ReplaceLogService().");
        }
        var entity = CreateEntity();
        entity.AddLogService(newInstance);
        return entity;
    }

    public void ReplaceLogService(Sources.Systems.Logging.ILogService newInstance) {
        var entity = logServiceEntity;
        if (entity == null) {
            entity = SetLogService(newInstance);
        } else {
            entity.ReplaceLogService(newInstance);
        }
    }

    public void RemoveLogService() {
        logServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public LogServiceComponent logService { get { return (LogServiceComponent)GetComponent(MetaComponentsLookup.LogService); } }
    public bool hasLogService { get { return HasComponent(MetaComponentsLookup.LogService); } }

    public void AddLogService(Sources.Systems.Logging.ILogService newInstance) {
        var index = MetaComponentsLookup.LogService;
        var component = (LogServiceComponent)CreateComponent(index, typeof(LogServiceComponent));
        component.Instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceLogService(Sources.Systems.Logging.ILogService newInstance) {
        var index = MetaComponentsLookup.LogService;
        var component = (LogServiceComponent)CreateComponent(index, typeof(LogServiceComponent));
        component.Instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveLogService() {
        RemoveComponent(MetaComponentsLookup.LogService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherLogService;

    public static Entitas.IMatcher<MetaEntity> LogService {
        get {
            if (_matcherLogService == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.LogService);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherLogService = matcher;
            }

            return _matcherLogService;
        }
    }
}
